name: test

on:
  pull_request:
    paths:
      - src/**
      - tests/**
      - config/**
      - pyproject.toml
      - .pre-commit-config.yml
      - .github/workflows/test.yml
  push:
    branches:
      - 'master'
    paths:
      - src/khoj/**
      - tests/**
      - config/**
      - pyproject.toml
      - .pre-commit-config.yml
      - .github/workflows/test.yml

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    container: ubuntu:jammy
    strategy:
      fail-fast: false
      matrix:
        python_version:
          - '3.9'
          - '3.10'
          - '3.11'

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: khoj
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: ‚è¨Ô∏è Install Dependencies
        run: |
          sudo apt update && sudo apt install -y libegl1 sqlite3 libsqlite3-0 && sudo apt install -y postgresql postgresql-client && sudo apt install postgresql-server-dev-14 && git clone https://github.com/ankane/pgvector.git && cd pg vector && make && sudo make install
          python -m pip install --upgrade pip

      - name: ‚¨áÔ∏è Install Application
        run: sed -i 's/dynamic = \["version"\]/version = "0.0.0"/' pyproject.toml && pip install --upgrade .[dev]

      - name: üå°Ô∏è Validate Application
        run: pre-commit run --hook-stage manual --all

      - name: üß™ Test Application
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: khoj
        run: pytest
        timeout-minutes: 10
